- id: group_1fec1a
- Makefile: 5           # max 5, 
- bit.h: # NE PAS REMPLIR CETTE LIGNE
      typedef rot_dir_t: 1                   # max 1, 
- bit.c: # NE PAS REMPLIR CETTE LIGNE
  - lsb4(): 1                        # max 1, 
  - msb4(): 1                        # max 1, 
  - lsb8(): 1                        # max 1, 
  - msb8(): 1                        # max 1, 
  - merge4(): 1                      # max 1, 
  - merge8(): 1                      # max 1, 
  - bit_get(): 1                     # max 1, 
  - bit_set(): 0                     # max 1, -1 il ne faut pas utiliser M_REQUIRE dans les fonctions ne retournant pas de code d'erreur
  - bit_unset(): 1                   # max 1, 
  - bit_edit(): 1                    # max 2, M_REQUIRE inutile, pareil pour bit_rotate
  - bit_rotate(): 5                      # max 5,
- alu.h: # NE PAS REMPLIR CETTE LIGNE
      alu_output_t_t: 3                  # max 3, 
- alu.c: # NE PAS REMPLIR CETTE LIGNE
  - get_flag(): 6                        # max 6, 
  - set_flag(): 5                        # max 6, M_EXIT_ERR_NO_MSG inutile
  - alu_add8(): # NE PAS REMPLIR CETTE LIGNE
      vérification d'usage: 1         # max 1, 
      modularisation: 5               # max 5, bien modularisé, bravo !
      addition: 1                     # max 1, 
      calcul des flags: 3             # max 3, 
      partie set_flags: 3             # max 3, 
  - alu_sub8(): # NE PAS REMPLIR CETTE LIGNE
      soustraction: 1                 # max 1, 
      calcul des flags: 3             # max 3, 
  - alu_add16_low(): # NE PAS REMPLIR CETTE LIGNE
      addition: 5                     # max 5, 
      calcul des flags: 1             # max 1, 
  - alu_add16_high(): # NE PAS REMPLIR CETTE LIGNE
      addition: 2.5                     # max 2.5, 
      calcul des flags: 0.5             # max 0.5, 
  - alu_shift(): 6                  # max 6, 
  - alu_shiftR_A(): 5               # max 5, 
  - alu_rotate(): 5                 # max 5, 
  - alu_carry_rotate(): 2.5           # max 2.5, 
- bus.h: # NE PAS REMPLIR CETTE LIGNE
      bus_t: 3                         # max 3, 
- bus.c: # NE PAS REMPLIR CETTE LIGNE
  - bus_plug(): # NE PAS REMPLIR CETTE LIGNE
      vérification d'usage: 1             # max 1, 
      vérification de tout le bus: 2.5      # max 2.5, 
      modularisation: 2.5                   # max 2.5, 
  - bus_forced_plug(): # NE PAS REMPLIR CETTE LIGNE
      vérifications d'usage: 1            # max 1, 
      corps: 1.5                            # max 2.5, -1 ne doit pas free le composant
      modularisation: 2.5                   # max 2.5, 
  - bus_remap(): # NE PAS REMPLIR CETTE LIGNE
      vérifications d'usage: 1            # max 2.5, -1.5 manque vérification NULL et end >= start
      vérification du range: 2            # max 2, 
      corps (boucle): 2.5                   # max 2.5, 
  - bus_unplug(): 2.5                    # max 3.5, -1 ne doit pas free
  - bus_read(): 2.5                      # max 3.5, -1 checker que bus != NULL, pareil pour autres méthodes
  - bus_write(): 3.5                     # max 3.5, 
  - bus_read16(): 6                    # max 6, 
  - bus_write16(): 6                   # max 6, 
- component.h: # NE PAS REMPLIR CETTE LIGNE
      component_t: 5                          # max 5, 
- component.c: # NE PAS REMPLIR CETTE LIGNE
  - component_create(): 5.5              # max 6, -0.5 tester c->mem != NULL pour avoir le bon type d'erreur (ERR_MEM plutôt que ERR_BAD_PARAMETER)
  - component_shared(): 3              # max 3.5, -0.5 vérifier que la mémoires partagée n'est pas nulle
  - component_free(): 4                # max 5, -1 oublié de free(c->mem)
- memory.h: # NE PAS REMPLIR CETTE LIGNE
      addr_t: 1        # max 1, 
      data_t: 1        # max 1, 
      memory_t: 4      # max 4, 
- memory.c: # NE PAS REMPLIR CETTE LIGNE
  - memory_create(): 6              # max 6, 
  - memory_free(): 2.5                # max 2.5, 
- gameboy.h: # NE PAS REMPLIR CETTE LIGNE
      gameboy_t: 5                         # max 5, 
- gameboy.c: # NE PAS REMPLIR CETTE LIGNE
  - gameboy_create(): # NE PAS REMPLIR CETTE LIGNE
      vérification d'usage: 0.5          # max 0.5,
      init de base: 1                  # max 2, -1 mettre le bus à zéro
      plug work-ram: 4                 # max 5, -1 oublié de vérifer les codes d'erreur
      plug echo-ram: 2.5                 # max 2.5, 
  - gameboy_free(): 4                # max 5, -1 il faut quand même unplug la echo RAM
- cpu.h: # NE PAS REMPLIR CETTE LIGNE
      typedef: 1           # max 1, 
      une reg-pair: 5      # max 5, 
      les autres: 2        # max 3, -1 pourrait modulariser
      bus (pointeur): 2    # max 2, 
      autres champs: 4     # max 4, 
- cpu.c: # NE PAS REMPLIR CETTE LIGNE
  - cpu_init(): 6                        # max 6, 
  - cpu_plug(): 2                        # max 2, 
  - cpu_free(): 2                        # max 2, 
  - cpu_cycle(): 3                       # max 3, 
- cpu-storage.c: # NE PAS REMPLIR CETTE LIGNE
  - cpu_read_at_idx(): 5                 # max 6, -1 ne pas utiliser M_REQUIRE dans une fonction sans code d'erreur, pareil en dessous
  - cpu_read16_at_idx(): 3               # max 3,
  - cpu_write_at_idx(): 2.5                # max 3.5, -1 vérifier code d'erreur de bus_write, pareil en dessous
  - cpu_write16_at_idx(): 1.5              # max 1.5, 
  - cpu_SP_push(): 5                     # max 6, -1 vérifier code d'erreur de cpu_write16_at_idx
  - cpu_SP_pop(): 6                      # max 6, 
- cpu-register.c: # NE PAS REMPLIR CETTE LIGNE
  - cpu_reg_get(): 2.5                        # max 2.5, 
  - cpu_reg_pair_get(): 2                   # max 2, 
  - cpu_reg_set(): 2.5                        # max 2.5, 
  - cpu_reg_pair_set(): 5                   # max 5, 
- style: 1.5        # max 2, min -2, (normal = 0), style agréable à lire, parfois un peu compact (e.g. alu.c)
- bonus/malus: -0.5  # max 5, min -5, (normal = 0), attention de ne pas utiliser M_REQUIRE (et similaires) dans les fonctions ne retournant pas de code d'erreur
